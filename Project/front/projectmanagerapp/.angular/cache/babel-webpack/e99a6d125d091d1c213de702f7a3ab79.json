{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"./attribute.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction AttributeComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ul\", 18);\n    i0.ɵɵelementStart(2, \"li\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function AttributeComponent_div_26_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const attr_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.deleteAttribute(attr_r2.id);\n    });\n    i0.ɵɵtext(5, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const attr_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", attr_r2 == null ? null : attr_r2.name, \" \");\n  }\n}\n\nexport let AttributeComponent = /*#__PURE__*/(() => {\n  class AttributeComponent {\n    constructor(dialogRef, activateRoute, attributeService, router) {\n      this.dialogRef = dialogRef;\n      this.activateRoute = activateRoute;\n      this.attributeService = attributeService;\n      this.router = router;\n      this.id = activateRoute.snapshot.params['id'];\n      this.dialogRef.updateSize('30%', '60%');\n    }\n\n    ngOnInit() {\n      this.getAttributeByID(this.id);\n    }\n\n    getAttributeByID(id) {\n      this.attributeService.getAttributeByID(id).subscribe(value => {\n        this.attribute = value;\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    onAddAttr(form) {\n      this.attributeService.createAttribute(form.value.nameAttr, this.id, form.value).subscribe(response => {\n        console.log(response);\n        this.getAttributeByID(this.id);\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    deleteAttribute(id) {\n      this.attributeService.deleteAttribute(id).subscribe(response => {\n        console.log(response);\n        this.getAttributeByID(this.id);\n      }, error => {\n        alert(error.message);\n      });\n    }\n\n    close() {\n      this.dialogRef.close();\n    }\n\n  }\n\n  AttributeComponent.ɵfac = function AttributeComponent_Factory(t) {\n    return new (t || AttributeComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.AttributeService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  AttributeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AttributeComponent,\n    selectors: [[\"attribute-root\"]],\n    decls: 27,\n    vars: 2,\n    consts: [[1, \"modal-content\", \"border-0\"], [1, \"modal-header\", \"bg-info\", \"text-white\"], [1, \"modal-title\", \"text-white\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-label\", \"Close\", 1, \"close\", \"text-white\", 3, \"click\"], [\"aria-hidden\", \"true\"], [1, \"modal-body\"], [1, \"notes-box\"], [1, \"notes-content\"], [3, \"ngSubmit\"], [\"myForm\", \"ngForm\"], [1, \"form-group\"], [\"autofocus\", \"\", \"ngModel\", \"\", \"name\", \"nameAttr\", \"type\", \"text\", \"minlength\", \"25\", \"placeholder\", \"\\u0410\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 2, \"float\", \"right\", 3, \"disabled\"], [\"rel\", \"stylesheet\", \"href\", \"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css\", \"integrity\", \"sha256-mmgLkCYLUQbXn0B1SRqzHar6dCnv9oZFPEC1g1cwlkk=\", \"crossorigin\", \"anonymous\"], [1, \"modal-footer\"], [1, \"col-md-12\", \"mb-3\"], [1, \"note-title\"], [4, \"ngFor\", \"ngForOf\"], [1, \"list-group\"], [1, \"list-group-item\"], [\"type\", \"button\", 1, \"btn\", \"btn-danger\", 2, \"float\", \"right\", 3, \"click\"]],\n    template: function AttributeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r5 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"h5\", 2);\n        i0.ɵɵtext(3, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 3);\n        i0.ɵɵlistener(\"click\", function AttributeComponent_Template_button_click_4_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelementStart(5, \"span\", 4);\n        i0.ɵɵtext(6, \"\\u00D7\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"form\", 8, 9);\n        i0.ɵɵlistener(\"ngSubmit\", function AttributeComponent_Template_form_ngSubmit_10_listener() {\n          i0.ɵɵrestoreView(_r5);\n\n          const _r0 = i0.ɵɵreference(11);\n\n          return ctx.onAddAttr(_r0);\n        });\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"label\");\n        i0.ɵɵtext(14, \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u0430\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 10);\n        i0.ɵɵelementStart(17, \"button\", 12);\n        i0.ɵɵtext(18, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"link\", 13);\n        i0.ɵɵelement(20, \"div\", 14);\n        i0.ɵɵelementStart(21, \"div\");\n        i0.ɵɵelementStart(22, \"div\", 15);\n        i0.ɵɵelementStart(23, \"div\", 16);\n        i0.ɵɵelementStart(24, \"p\");\n        i0.ɵɵtext(25, \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0430\\u0442\\u0440\\u0438\\u0431\\u0443\\u0442\\u043E\\u0432\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, AttributeComponent_div_26_Template, 6, 1, \"div\", 17);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(11);\n\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"disabled\", !_r0.invalid);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngForOf\", ctx.attribute);\n      }\n    },\n    directives: [i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.NgForm, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, i4.MinLengthValidator, i4.RequiredValidator, i5.NgForOf],\n    encapsulation: 2\n  });\n  return AttributeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}